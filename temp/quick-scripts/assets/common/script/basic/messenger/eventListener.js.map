{"version":3,"sources":["eventListener.js"],"names":["window","eventListener","oneToMultiListener","on","eventName","handler","target","handlerList","handlers","i","length","push","dispatch","data","len","call","e","console","error","off","oldHandler","oldTarget","splice","clear","create","newEventListener","Object"],"mappings":"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","file":"eventListener.js","sourceRoot":"../../../../../../../assets/common/script/basic/messenger","sourcesContent":["window.eventListener = {};\n\nvar oneToMultiListener = {};\n\noneToMultiListener.on = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        handlerList = [];\n        this.handlers[eventName] = handlerList;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        if (!handlerList[i]) {\n            handlerList[i].handler = handler;\n            handlerList[i].target = target;\n            return i;\n        }\n    }\n\n    handlerList.push({handler: handler, target: target});\n    return handlerList.length;\n};\n\noneToMultiListener.dispatch = function(eventName, data) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    var len = handlerList.length;\n    for (var i = 0; i < len; i++) {\n        var handler = handlerList[i].handler;\n        var target = handlerList[i].target;\n        if (handler) {\n            try {\n                if (target) {\n                    handler.call(target, data);\n                } else {\n                    handler(data);\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n};\n\noneToMultiListener.off = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        var oldHandler = handlerList[i].handler;\n        var oldTarget = handlerList[i].target;\n        if (oldHandler === handler && oldTarget === target) {\n            handlerList.splice(i, 1);\n            break;\n        }\n    }\n};\noneToMultiListener.clear = function(target) {\n    for (var eventName in this.handlers) {\n        var handlerList = this.handlers[eventName];\n        for (var i = 0; i < handlerList.length; i++) {\n            var oldTarget = handlerList[i].target;\n            if (oldTarget === target) {\n                handlerList.splice(i, 1);\n            }\n        }\n    }\n};\n\neventListener.create = function() {\n    var newEventListener = Object.create(oneToMultiListener);\n    newEventListener.handlers = {};\n    return newEventListener;\n};"]}